{"ast":null,"code":"var _jsxFileName = \"D:\\\\KULIAH\\\\Web_enterprise\\\\GeBookIn\\\\client\\\\src\\\\pages\\\\review\\\\Review.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport ReviewForm from \"./ReviewForm\";\nimport ReviewList from \"./ReviewList\";\nimport \"./review.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Review = () => {\n  _s();\n  const [reviews, setReviews] = useState([]); // State for storing reviews\n  const {\n    dispatch\n  } = useContext(AuthContext);\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch reviews when component mounts\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await axios.get(\"/reviews\");\n        setReviews(res.data);\n      } catch (err) {\n        console.error(\"Error fetching reviews:\", err);\n        dispatch({\n          type: \"FETCH_REVIEWS_FAILURE\",\n          payload: {\n            message: \"Failed to fetch reviews\"\n          }\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [dispatch]);\n  const handleNewReview = newReview => {\n    setReviews(prevReviews => [...prevReviews, newReview]);\n  };\n\n  // Calculate the average rating\n  const averageRating = reviews.length > 0 ? (reviews.reduce((sum, review) => sum + (review.rating || 0), 0) / reviews.length).toFixed(1) : 0;\n  const getStarElements = rating => {\n    const stars = [];\n    const roundedRating = Math.round(rating); // Round the rating to the nearest whole number\n\n    for (let i = 1; i <= 5; i++) {\n      if (i <= roundedRating) {\n        stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"star filled\",\n          children: \"\\u2605\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this));\n      } else {\n        stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"star\",\n          children: \"\\u2606\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this));\n      }\n    }\n    return stars;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review\",\n    children: [/*#__PURE__*/_jsxDEV(ReviewForm, {\n      onNewReview: handleNewReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading reviews...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"averageRatingContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Average Rating: \", averageRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stars\",\n          children: getStarElements(averageRating)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReviewList, {\n        reviews: reviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Review, \"iybTIajTfocSHWWrecSHqAOvWLM=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","ReviewForm","ReviewList","jsxDEV","_jsxDEV","Fragment","_Fragment","Review","_s","reviews","setReviews","dispatch","loading","setLoading","fetchReviews","res","get","data","err","console","error","type","payload","message","handleNewReview","newReview","prevReviews","averageRating","length","reduce","sum","review","rating","toFixed","getStarElements","stars","roundedRating","Math","round","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNewReview","_c","$RefreshReg$"],"sources":["D:/KULIAH/Web_enterprise/GeBookIn/client/src/pages/review/Review.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport ReviewForm from \"./ReviewForm\";\r\nimport ReviewList from \"./ReviewList\";\r\nimport \"./review.css\";\r\n\r\nconst Review = () => {\r\n    const [reviews, setReviews] = useState([]); // State for storing reviews\r\n    const { dispatch } = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n\r\n    // Fetch reviews when component mounts\r\n    useEffect(() => {\r\n        const fetchReviews = async () => {\r\n            try {\r\n                const res = await axios.get(\"/reviews\");\r\n                setReviews(res.data);\r\n            } catch (err) {\r\n                console.error(\"Error fetching reviews:\", err);\r\n                dispatch({ type: \"FETCH_REVIEWS_FAILURE\", payload: { message: \"Failed to fetch reviews\" } });\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchReviews();\r\n    }, [dispatch]);\r\n\r\n    const handleNewReview = (newReview) => {\r\n        setReviews(prevReviews => [...prevReviews, newReview]);\r\n    };\r\n\r\n    // Calculate the average rating\r\n    const averageRating = reviews.length > 0\r\n        ? (reviews.reduce((sum, review) => sum + (review.rating || 0), 0) / reviews.length).toFixed(1)\r\n        : 0;\r\n\r\n    const getStarElements = (rating) => {\r\n        const stars = [];\r\n        const roundedRating = Math.round(rating); // Round the rating to the nearest whole number\r\n\r\n        for (let i = 1; i <= 5; i++) {\r\n            if (i <= roundedRating) {\r\n                stars.push(<span key={i} className=\"star filled\">★</span>);\r\n            } else {\r\n                stars.push(<span key={i} className=\"star\">☆</span>);\r\n            }\r\n        }\r\n\r\n        return stars;\r\n    };\r\n\r\n    return (\r\n        <div className=\"review\">\r\n            <ReviewForm onNewReview={handleNewReview} />\r\n            {loading ? (\r\n                <p>Loading reviews...</p>\r\n            ) : (\r\n                <>\r\n                    <div className=\"averageRatingContainer\">\r\n                        <h2>Average Rating: {averageRating}</h2>\r\n                        <div className=\"stars\">\r\n                            {getStarElements(averageRating)}\r\n                        </div>\r\n                    </div>\r\n                    <ReviewList reviews={reviews} />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Review;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}